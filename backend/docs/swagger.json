{
    "swagger": "2.0",
    "info": {
        "description": "The comprehensive list of all Buggy APIs",
        "title": "Buggy APIs",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:4000",
    "basePath": "/api/v1",
    "paths": {
        "/organisation": {
            "get": {
                "description": "Get an organisation, this API will return an error if the organisation does not exist.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organisation"
                ],
                "summary": "Get an organisation.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/organisation.organisationOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an organisations name or description.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organisation"
                ],
                "summary": "Update an organisations name or description.",
                "parameters": [
                    {
                        "description": "json",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/organisation.createOrganisationInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/organisation.organisationOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new organisation, each profile may only have one organisation.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organisation"
                ],
                "summary": "Create a new organisation.",
                "parameters": [
                    {
                        "description": "json",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/organisation.createOrganisationInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/organisation.organisationOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    }
                }
            }
        },
        "/organisation/team": {
            "get": {
                "description": "Get all teams under a profile's organisation.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organisation"
                ],
                "summary": "Get all teams under a profile's organisation.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/team.teamOutput"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new team under a profile's organisation.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organisation"
                ],
                "summary": "Create a new team under a profile's organisation.",
                "parameters": [
                    {
                        "description": "json",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/team.createTeamInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/team.teamOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    }
                }
            }
        },
        "/organisation/team/{team-id}": {
            "put": {
                "description": "Update a team under a profile's organisation.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organisation"
                ],
                "summary": "Update a team under a profile's organisation.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "team-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/team.teamOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    }
                }
            }
        },
        "/organisation/transfer": {
            "get": {
                "description": "Get all incoming and outgoing organisation transfers.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organisation"
                ],
                "summary": "Get all organisation transfers.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.GetOrganisationTransfersTxResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new organisational transfer.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organisation"
                ],
                "summary": "Create a new organisational transfer.",
                "parameters": [
                    {
                        "description": "json",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transfer.transferInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transfer.transferOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    }
                }
            }
        },
        "/organisation/transfer/reponse/{organisation-transfer-id}": {
            "get": {
                "description": "Respond to an organisation transfer.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organisation"
                ],
                "summary": "Respond to an organisation transfer.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organisation Transfer ID",
                        "name": "organisation-transfer-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    }
                }
            }
        },
        "/organisation/transfer/{organisation-transfer-id}": {
            "delete": {
                "description": "Delete an organisational transfer.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organisation"
                ],
                "summary": "Delete an organisational transfer.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organisation Transfer ID",
                        "name": "organisation-transfer-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transfer.transferOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "description": "Get a profile from a token.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Get a profile from a token.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/profile.profileOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new profile by giving a profile name, email and password. This API will generate a verification email which will contain a redirect link.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Create a new profile, emails must be unique.",
                "parameters": [
                    {
                        "description": "json",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/profile.createProfileInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/profile.profileOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    }
                }
            }
        },
        "/profile/login": {
            "post": {
                "description": "Login with email and password. Only verified users can login.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Login with email and password.",
                "parameters": [
                    {
                        "description": "json",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/profile.loginInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/profile.profileOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    }
                }
            }
        },
        "/profile/password/change": {
            "post": {
                "description": "Change a profile password using the old password for confirmation.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Change a profile password.",
                "parameters": [
                    {
                        "description": "json",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/profile.changePasswordInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/profile.profileOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    }
                }
            }
        },
        "/profile/verify": {
            "get": {
                "description": "Verify a profile. This link will only come from emails.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Verify a profile.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "string",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/profile.profileOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    }
                }
            }
        },
        "/team-member": {
            "put": {
                "description": "Update a team members permissions.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "team-member"
                ],
                "summary": "Update a team members permissions.",
                "parameters": [
                    {
                        "description": "json",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/teammember.updateTeamMemberInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/teammember.teamMemberOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new team member. The profile and team has to exist already to add a member. The profile making this request must be an admin for the team already.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "team-member"
                ],
                "summary": "Create a new team member.",
                "parameters": [
                    {
                        "description": "json",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/teammember.createTeamMemberInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/teammember.teamMemberOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    }
                }
            }
        },
        "/team-member/{team-id}": {
            "get": {
                "description": "Get all team members.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "team-member"
                ],
                "summary": "Get all team members.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "team-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/teammember.profileOutput"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "db.GetOrganisationTransfersTxResponse": {
            "type": "object",
            "properties": {
                "incoming_transfers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.IncomingTransfer"
                    }
                },
                "outgoing_transfer": {
                    "$ref": "#/definitions/db.OutgoingTransfer"
                }
            }
        },
        "db.IncomingTransfer": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "integer"
                },
                "from_profile_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "organisation_description": {
                    "type": "string"
                },
                "organisation_name": {
                    "type": "string"
                }
            }
        },
        "db.OutgoingTransfer": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "organisation_description": {
                    "type": "string"
                },
                "organisation_name": {
                    "type": "string"
                },
                "to_profile_name": {
                    "type": "string"
                }
            }
        },
        "organisation.createOrganisationInput": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "The organisation for bugs!"
                },
                "name": {
                    "type": "string",
                    "maxLength": 20,
                    "example": "buggy org"
                }
            }
        },
        "organisation.organisationOutput": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "integer",
                    "example": 1710579130
                },
                "description": {
                    "type": "string",
                    "example": "The organisation for bugs!"
                },
                "id": {
                    "type": "string",
                    "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                },
                "name": {
                    "type": "string",
                    "example": "buggy org"
                },
                "owner": {
                    "type": "string",
                    "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                },
                "updated_at": {
                    "type": "integer",
                    "example": 1710579130
                }
            }
        },
        "profile.changePasswordInput": {
            "type": "object",
            "required": [
                "new_password",
                "old_password"
            ],
            "properties": {
                "new_password": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 8,
                    "example": "something1234"
                },
                "old_password": {
                    "type": "string",
                    "example": "something123"
                }
            }
        },
        "profile.createProfileInput": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 32,
                    "example": "asrivatsa6@gmail.com"
                },
                "name": {
                    "type": "string",
                    "maxLength": 32,
                    "example": "abhinav"
                },
                "password": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 8,
                    "example": "something123"
                }
            }
        },
        "profile.loginInput": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "asrivatsa6@gmail.com"
                },
                "password": {
                    "type": "string",
                    "example": "something123"
                }
            }
        },
        "profile.profileOutput": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "integer",
                    "example": 1710579130
                },
                "email": {
                    "type": "string",
                    "example": "asrivatsa6@gmail.com"
                },
                "id": {
                    "type": "string",
                    "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                },
                "name": {
                    "type": "string",
                    "example": "abhinav"
                },
                "updated_at": {
                    "type": "integer",
                    "example": 1710579130
                },
                "verified": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "team.createTeamInput": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "The Buggy testing team!"
                },
                "name": {
                    "type": "string",
                    "maxLength": 20,
                    "example": "testing team"
                }
            }
        },
        "team.teamOutput": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "integer",
                    "example": 1710579130
                },
                "description": {
                    "type": "string",
                    "example": "The Buggy testing team!"
                },
                "id": {
                    "type": "string",
                    "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                },
                "name": {
                    "type": "string",
                    "example": "testing team"
                },
                "organisation_description": {
                    "type": "string",
                    "example": "The organisation for bugs!"
                },
                "organisation_name": {
                    "type": "string",
                    "example": "buggy org"
                },
                "updated_at": {
                    "type": "integer",
                    "example": 1710579130
                }
            }
        },
        "teammember.createTeamMemberInput": {
            "type": "object",
            "required": [
                "email",
                "team_id"
            ],
            "properties": {
                "admin": {
                    "type": "boolean",
                    "example": false
                },
                "email": {
                    "type": "string",
                    "example": "asrivatsa6@gmail.com"
                },
                "team_id": {
                    "type": "string",
                    "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                }
            }
        },
        "teammember.profileOutput": {
            "type": "object",
            "properties": {
                "admin": {
                    "type": "boolean",
                    "example": false
                },
                "created_at": {
                    "type": "integer",
                    "example": 1710579130
                },
                "email": {
                    "type": "string",
                    "example": "asrivatsa6@gmail.com"
                },
                "id": {
                    "type": "string",
                    "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                },
                "name": {
                    "type": "string",
                    "example": "abhinav"
                },
                "updated_at": {
                    "type": "integer",
                    "example": 1710579130
                },
                "verified": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "teammember.teamMemberOutput": {
            "type": "object",
            "properties": {
                "admin": {
                    "type": "boolean",
                    "example": false
                },
                "created_at": {
                    "type": "integer",
                    "example": 1710579130
                },
                "profile_id": {
                    "type": "string",
                    "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                },
                "team_id": {
                    "type": "string",
                    "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                },
                "updated_at": {
                    "type": "integer",
                    "example": 1710579130
                }
            }
        },
        "teammember.updateTeamMemberInput": {
            "type": "object",
            "required": [
                "profile_id",
                "team_id"
            ],
            "properties": {
                "admin": {
                    "type": "boolean",
                    "example": false
                },
                "profile_id": {
                    "type": "string",
                    "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                },
                "team_id": {
                    "type": "string",
                    "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                }
            }
        },
        "transfer.transferInput": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "asrivatsa6@gmail.com"
                }
            }
        },
        "transfer.transferOutput": {
            "type": "object",
            "properties": {
                "completed": {
                    "type": "boolean",
                    "example": false
                },
                "created_at": {
                    "type": "integer",
                    "example": 1710579130
                },
                "from_profile": {
                    "type": "string",
                    "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                },
                "id": {
                    "type": "string",
                    "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                },
                "organisation": {
                    "type": "string",
                    "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                },
                "to_profile": {
                    "type": "string",
                    "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                }
            }
        },
        "util.ErrorDetail": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "value": {}
            }
        },
        "util.ErrorModel": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/util.ErrorDetail"
                    }
                },
                "instance": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        }
    }
}